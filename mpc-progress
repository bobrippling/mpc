#!/usr/bin/perl

my $cols = 80;

sub bar
{
	my $percent = shift;
	my $val = $percent / 2;
	my $extra = 50 - $val;
	my @ents;
	push @ents, '[';
	for(; $val > 0; $val--){
		push @ents, '=';
	}
	for(; $extra > 0; $extra--){
		push @ents, '-';
	}
	push @ents, ']';
	return join '', @ents;
}

sub usage
{
	print STDERR "Usage: $0 [--exit-if-stopped]\n";
	exit 2;
}

my $exit_if_stopped = 0;
if(@ARGV == 1){
	if($ARGV[0] eq '--exit-if-stopped'){
		$exit_if_stopped = 1;
	}else{
		usage();
	}
}elsif(@ARGV){
	usage();
}

$| = 1;

while(1){
	my @out = split /\n/, `mpc`;
	my @play_lines = grep /(playing|paused)/, @out;

	if(!@play_lines){
		last if $exit_if_stopped;
		printf "\33[2Knot playing\r";
	}else{
		my $fraction = (split /\s+/, join '', @play_lines)[2];

		my ($cur_min_field, $cur_sec_field, $total_min_field, $total_sec_field)
			= ($fraction =~ m#([^:]+):([^/]+)/([^:]+):(.*)#);

		my $cur_sec = $cur_sec_field + 60 * $cur_min_field;
		my $total_sec = $total_sec_field + 60 * $total_min_field;

		my $percent = 0;
		if($total_sec){
			$percent = 100 * $cur_sec / $total_sec;
		}

		my $remaining = $total_sec - $cur_sec;
		my $remaining_min = $remaining / 60;
		my $remaining_sec = $remaining % 60;

		printf("%s %d%% %02d:%02d\r", bar($percent), $percent, $remaining_min, $remaining_sec);
	}

	sleep 1;
}
